// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_parameters.proto

#ifndef PROTOBUF_INCLUDED_proto_5fparameters_2eproto
#define PROTOBUF_INCLUDED_proto_5fparameters_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto_basic.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_5fparameters_2eproto 

namespace protobuf_proto_5fparameters_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_5fparameters_2eproto
namespace top {
namespace evm_engine {
namespace parameters {
class FunctionCallArgs;
class FunctionCallArgsDefaultTypeInternal;
extern FunctionCallArgsDefaultTypeInternal _FunctionCallArgs_default_instance_;
class SubmitResult;
class SubmitResultDefaultTypeInternal;
extern SubmitResultDefaultTypeInternal _SubmitResult_default_instance_;
}  // namespace parameters
}  // namespace evm_engine
}  // namespace top
namespace google {
namespace protobuf {
template<> ::top::evm_engine::parameters::FunctionCallArgs* Arena::CreateMaybeMessage<::top::evm_engine::parameters::FunctionCallArgs>(Arena*);
template<> ::top::evm_engine::parameters::SubmitResult* Arena::CreateMaybeMessage<::top::evm_engine::parameters::SubmitResult>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace top {
namespace evm_engine {
namespace parameters {

// ===================================================================

class SubmitResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.evm_engine.parameters.SubmitResult) */ {
 public:
  SubmitResult();
  virtual ~SubmitResult();

  SubmitResult(const SubmitResult& from);

  inline SubmitResult& operator=(const SubmitResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubmitResult(SubmitResult&& from) noexcept
    : SubmitResult() {
    *this = ::std::move(from);
  }

  inline SubmitResult& operator=(SubmitResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubmitResult* internal_default_instance() {
    return reinterpret_cast<const SubmitResult*>(
               &_SubmitResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SubmitResult* other);
  friend void swap(SubmitResult& a, SubmitResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubmitResult* New() const final {
    return CreateMaybeMessage<SubmitResult>(NULL);
  }

  SubmitResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubmitResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubmitResult& from);
  void MergeFrom(const SubmitResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubmitResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .top.evm_engine.basic.ResultLog logs = 5;
  int logs_size() const;
  void clear_logs();
  static const int kLogsFieldNumber = 5;
  ::top::evm_engine::basic::ResultLog* mutable_logs(int index);
  ::google::protobuf::RepeatedPtrField< ::top::evm_engine::basic::ResultLog >*
      mutable_logs();
  const ::top::evm_engine::basic::ResultLog& logs(int index) const;
  ::top::evm_engine::basic::ResultLog* add_logs();
  const ::google::protobuf::RepeatedPtrField< ::top::evm_engine::basic::ResultLog >&
      logs() const;

  // bytes status_data = 3;
  void clear_status_data();
  static const int kStatusDataFieldNumber = 3;
  const ::std::string& status_data() const;
  void set_status_data(const ::std::string& value);
  #if LANG_CXX11
  void set_status_data(::std::string&& value);
  #endif
  void set_status_data(const char* value);
  void set_status_data(const void* value, size_t size);
  ::std::string* mutable_status_data();
  ::std::string* release_status_data();
  void set_allocated_status_data(::std::string* status_data);

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 transaction_status = 2;
  void clear_transaction_status();
  static const int kTransactionStatusFieldNumber = 2;
  ::google::protobuf::uint32 transaction_status() const;
  void set_transaction_status(::google::protobuf::uint32 value);

  // uint64 gas_used = 4;
  void clear_gas_used();
  static const int kGasUsedFieldNumber = 4;
  ::google::protobuf::uint64 gas_used() const;
  void set_gas_used(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:top.evm_engine.parameters.SubmitResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::top::evm_engine::basic::ResultLog > logs_;
  ::google::protobuf::internal::ArenaStringPtr status_data_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 transaction_status_;
  ::google::protobuf::uint64 gas_used_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5fparameters_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionCallArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.evm_engine.parameters.FunctionCallArgs) */ {
 public:
  FunctionCallArgs();
  virtual ~FunctionCallArgs();

  FunctionCallArgs(const FunctionCallArgs& from);

  inline FunctionCallArgs& operator=(const FunctionCallArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionCallArgs(FunctionCallArgs&& from) noexcept
    : FunctionCallArgs() {
    *this = ::std::move(from);
  }

  inline FunctionCallArgs& operator=(FunctionCallArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionCallArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionCallArgs* internal_default_instance() {
    return reinterpret_cast<const FunctionCallArgs*>(
               &_FunctionCallArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(FunctionCallArgs* other);
  friend void swap(FunctionCallArgs& a, FunctionCallArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionCallArgs* New() const final {
    return CreateMaybeMessage<FunctionCallArgs>(NULL);
  }

  FunctionCallArgs* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionCallArgs>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionCallArgs& from);
  void MergeFrom(const FunctionCallArgs& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionCallArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes input = 4;
  void clear_input();
  static const int kInputFieldNumber = 4;
  const ::std::string& input() const;
  void set_input(const ::std::string& value);
  #if LANG_CXX11
  void set_input(::std::string&& value);
  #endif
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  ::std::string* mutable_input();
  ::std::string* release_input();
  void set_allocated_input(::std::string* input);

  // .top.evm_engine.basic.ProtoAddress address = 2;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  private:
  const ::top::evm_engine::basic::ProtoAddress& _internal_address() const;
  public:
  const ::top::evm_engine::basic::ProtoAddress& address() const;
  ::top::evm_engine::basic::ProtoAddress* release_address();
  ::top::evm_engine::basic::ProtoAddress* mutable_address();
  void set_allocated_address(::top::evm_engine::basic::ProtoAddress* address);

  // .top.evm_engine.basic.WeiU256 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  private:
  const ::top::evm_engine::basic::WeiU256& _internal_value() const;
  public:
  const ::top::evm_engine::basic::WeiU256& value() const;
  ::top::evm_engine::basic::WeiU256* release_value();
  ::top::evm_engine::basic::WeiU256* mutable_value();
  void set_allocated_value(::top::evm_engine::basic::WeiU256* value);

  // uint64 gas_limit = 5;
  void clear_gas_limit();
  static const int kGasLimitFieldNumber = 5;
  ::google::protobuf::uint64 gas_limit() const;
  void set_gas_limit(::google::protobuf::uint64 value);

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:top.evm_engine.parameters.FunctionCallArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr input_;
  ::top::evm_engine::basic::ProtoAddress* address_;
  ::top::evm_engine::basic::WeiU256* value_;
  ::google::protobuf::uint64 gas_limit_;
  ::google::protobuf::uint32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5fparameters_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SubmitResult

// uint32 version = 1;
inline void SubmitResult::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 SubmitResult::version() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.parameters.SubmitResult.version)
  return version_;
}
inline void SubmitResult::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.parameters.SubmitResult.version)
}

// uint32 transaction_status = 2;
inline void SubmitResult::clear_transaction_status() {
  transaction_status_ = 0u;
}
inline ::google::protobuf::uint32 SubmitResult::transaction_status() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.parameters.SubmitResult.transaction_status)
  return transaction_status_;
}
inline void SubmitResult::set_transaction_status(::google::protobuf::uint32 value) {
  
  transaction_status_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.parameters.SubmitResult.transaction_status)
}

// bytes status_data = 3;
inline void SubmitResult::clear_status_data() {
  status_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubmitResult::status_data() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.parameters.SubmitResult.status_data)
  return status_data_.GetNoArena();
}
inline void SubmitResult::set_status_data(const ::std::string& value) {
  
  status_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.evm_engine.parameters.SubmitResult.status_data)
}
#if LANG_CXX11
inline void SubmitResult::set_status_data(::std::string&& value) {
  
  status_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.evm_engine.parameters.SubmitResult.status_data)
}
#endif
inline void SubmitResult::set_status_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.evm_engine.parameters.SubmitResult.status_data)
}
inline void SubmitResult::set_status_data(const void* value, size_t size) {
  
  status_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.evm_engine.parameters.SubmitResult.status_data)
}
inline ::std::string* SubmitResult::mutable_status_data() {
  
  // @@protoc_insertion_point(field_mutable:top.evm_engine.parameters.SubmitResult.status_data)
  return status_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitResult::release_status_data() {
  // @@protoc_insertion_point(field_release:top.evm_engine.parameters.SubmitResult.status_data)
  
  return status_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitResult::set_allocated_status_data(::std::string* status_data) {
  if (status_data != NULL) {
    
  } else {
    
  }
  status_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_data);
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.parameters.SubmitResult.status_data)
}

// uint64 gas_used = 4;
inline void SubmitResult::clear_gas_used() {
  gas_used_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SubmitResult::gas_used() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.parameters.SubmitResult.gas_used)
  return gas_used_;
}
inline void SubmitResult::set_gas_used(::google::protobuf::uint64 value) {
  
  gas_used_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.parameters.SubmitResult.gas_used)
}

// repeated .top.evm_engine.basic.ResultLog logs = 5;
inline int SubmitResult::logs_size() const {
  return logs_.size();
}
inline ::top::evm_engine::basic::ResultLog* SubmitResult::mutable_logs(int index) {
  // @@protoc_insertion_point(field_mutable:top.evm_engine.parameters.SubmitResult.logs)
  return logs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::top::evm_engine::basic::ResultLog >*
SubmitResult::mutable_logs() {
  // @@protoc_insertion_point(field_mutable_list:top.evm_engine.parameters.SubmitResult.logs)
  return &logs_;
}
inline const ::top::evm_engine::basic::ResultLog& SubmitResult::logs(int index) const {
  // @@protoc_insertion_point(field_get:top.evm_engine.parameters.SubmitResult.logs)
  return logs_.Get(index);
}
inline ::top::evm_engine::basic::ResultLog* SubmitResult::add_logs() {
  // @@protoc_insertion_point(field_add:top.evm_engine.parameters.SubmitResult.logs)
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::top::evm_engine::basic::ResultLog >&
SubmitResult::logs() const {
  // @@protoc_insertion_point(field_list:top.evm_engine.parameters.SubmitResult.logs)
  return logs_;
}

// -------------------------------------------------------------------

// FunctionCallArgs

// uint32 version = 1;
inline void FunctionCallArgs::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 FunctionCallArgs::version() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.parameters.FunctionCallArgs.version)
  return version_;
}
inline void FunctionCallArgs::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.parameters.FunctionCallArgs.version)
}

// .top.evm_engine.basic.ProtoAddress address = 2;
inline bool FunctionCallArgs::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::top::evm_engine::basic::ProtoAddress& FunctionCallArgs::_internal_address() const {
  return *address_;
}
inline const ::top::evm_engine::basic::ProtoAddress& FunctionCallArgs::address() const {
  const ::top::evm_engine::basic::ProtoAddress* p = address_;
  // @@protoc_insertion_point(field_get:top.evm_engine.parameters.FunctionCallArgs.address)
  return p != NULL ? *p : *reinterpret_cast<const ::top::evm_engine::basic::ProtoAddress*>(
      &::top::evm_engine::basic::_ProtoAddress_default_instance_);
}
inline ::top::evm_engine::basic::ProtoAddress* FunctionCallArgs::release_address() {
  // @@protoc_insertion_point(field_release:top.evm_engine.parameters.FunctionCallArgs.address)
  
  ::top::evm_engine::basic::ProtoAddress* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::top::evm_engine::basic::ProtoAddress* FunctionCallArgs::mutable_address() {
  
  if (address_ == NULL) {
    auto* p = CreateMaybeMessage<::top::evm_engine::basic::ProtoAddress>(GetArenaNoVirtual());
    address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:top.evm_engine.parameters.FunctionCallArgs.address)
  return address_;
}
inline void FunctionCallArgs::set_allocated_address(::top::evm_engine::basic::ProtoAddress* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.parameters.FunctionCallArgs.address)
}

// .top.evm_engine.basic.WeiU256 value = 3;
inline bool FunctionCallArgs::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline const ::top::evm_engine::basic::WeiU256& FunctionCallArgs::_internal_value() const {
  return *value_;
}
inline const ::top::evm_engine::basic::WeiU256& FunctionCallArgs::value() const {
  const ::top::evm_engine::basic::WeiU256* p = value_;
  // @@protoc_insertion_point(field_get:top.evm_engine.parameters.FunctionCallArgs.value)
  return p != NULL ? *p : *reinterpret_cast<const ::top::evm_engine::basic::WeiU256*>(
      &::top::evm_engine::basic::_WeiU256_default_instance_);
}
inline ::top::evm_engine::basic::WeiU256* FunctionCallArgs::release_value() {
  // @@protoc_insertion_point(field_release:top.evm_engine.parameters.FunctionCallArgs.value)
  
  ::top::evm_engine::basic::WeiU256* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::top::evm_engine::basic::WeiU256* FunctionCallArgs::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::top::evm_engine::basic::WeiU256>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:top.evm_engine.parameters.FunctionCallArgs.value)
  return value_;
}
inline void FunctionCallArgs::set_allocated_value(::top::evm_engine::basic::WeiU256* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.parameters.FunctionCallArgs.value)
}

// bytes input = 4;
inline void FunctionCallArgs::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionCallArgs::input() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.parameters.FunctionCallArgs.input)
  return input_.GetNoArena();
}
inline void FunctionCallArgs::set_input(const ::std::string& value) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.evm_engine.parameters.FunctionCallArgs.input)
}
#if LANG_CXX11
inline void FunctionCallArgs::set_input(::std::string&& value) {
  
  input_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.evm_engine.parameters.FunctionCallArgs.input)
}
#endif
inline void FunctionCallArgs::set_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.evm_engine.parameters.FunctionCallArgs.input)
}
inline void FunctionCallArgs::set_input(const void* value, size_t size) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.evm_engine.parameters.FunctionCallArgs.input)
}
inline ::std::string* FunctionCallArgs::mutable_input() {
  
  // @@protoc_insertion_point(field_mutable:top.evm_engine.parameters.FunctionCallArgs.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionCallArgs::release_input() {
  // @@protoc_insertion_point(field_release:top.evm_engine.parameters.FunctionCallArgs.input)
  
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionCallArgs::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    
  } else {
    
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.parameters.FunctionCallArgs.input)
}

// uint64 gas_limit = 5;
inline void FunctionCallArgs::clear_gas_limit() {
  gas_limit_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FunctionCallArgs::gas_limit() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.parameters.FunctionCallArgs.gas_limit)
  return gas_limit_;
}
inline void FunctionCallArgs::set_gas_limit(::google::protobuf::uint64 value) {
  
  gas_limit_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.parameters.FunctionCallArgs.gas_limit)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace parameters
}  // namespace evm_engine
}  // namespace top

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_5fparameters_2eproto
