// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_precompile.proto

#ifndef PROTOBUF_INCLUDED_proto_5fprecompile_2eproto
#define PROTOBUF_INCLUDED_proto_5fprecompile_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto_basic.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_5fprecompile_2eproto 

namespace protobuf_proto_5fprecompile_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_5fprecompile_2eproto
namespace top {
namespace evm_engine {
namespace precompile {
class ContractBridgeArgs;
class ContractBridgeArgsDefaultTypeInternal;
extern ContractBridgeArgsDefaultTypeInternal _ContractBridgeArgs_default_instance_;
class ContractContext;
class ContractContextDefaultTypeInternal;
extern ContractContextDefaultTypeInternal _ContractContext_default_instance_;
class PrecompileFailure;
class PrecompileFailureDefaultTypeInternal;
extern PrecompileFailureDefaultTypeInternal _PrecompileFailure_default_instance_;
class PrecompileOutput;
class PrecompileOutputDefaultTypeInternal;
extern PrecompileOutputDefaultTypeInternal _PrecompileOutput_default_instance_;
}  // namespace precompile
}  // namespace evm_engine
}  // namespace top
namespace google {
namespace protobuf {
template<> ::top::evm_engine::precompile::ContractBridgeArgs* Arena::CreateMaybeMessage<::top::evm_engine::precompile::ContractBridgeArgs>(Arena*);
template<> ::top::evm_engine::precompile::ContractContext* Arena::CreateMaybeMessage<::top::evm_engine::precompile::ContractContext>(Arena*);
template<> ::top::evm_engine::precompile::PrecompileFailure* Arena::CreateMaybeMessage<::top::evm_engine::precompile::PrecompileFailure>(Arena*);
template<> ::top::evm_engine::precompile::PrecompileOutput* Arena::CreateMaybeMessage<::top::evm_engine::precompile::PrecompileOutput>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace top {
namespace evm_engine {
namespace precompile {

// ===================================================================

class PrecompileOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.evm_engine.precompile.PrecompileOutput) */ {
 public:
  PrecompileOutput();
  virtual ~PrecompileOutput();

  PrecompileOutput(const PrecompileOutput& from);

  inline PrecompileOutput& operator=(const PrecompileOutput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrecompileOutput(PrecompileOutput&& from) noexcept
    : PrecompileOutput() {
    *this = ::std::move(from);
  }

  inline PrecompileOutput& operator=(PrecompileOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrecompileOutput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrecompileOutput* internal_default_instance() {
    return reinterpret_cast<const PrecompileOutput*>(
               &_PrecompileOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PrecompileOutput* other);
  friend void swap(PrecompileOutput& a, PrecompileOutput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrecompileOutput* New() const final {
    return CreateMaybeMessage<PrecompileOutput>(NULL);
  }

  PrecompileOutput* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PrecompileOutput>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PrecompileOutput& from);
  void MergeFrom(const PrecompileOutput& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrecompileOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .top.evm_engine.basic.ResultLog logs = 4;
  int logs_size() const;
  void clear_logs();
  static const int kLogsFieldNumber = 4;
  ::top::evm_engine::basic::ResultLog* mutable_logs(int index);
  ::google::protobuf::RepeatedPtrField< ::top::evm_engine::basic::ResultLog >*
      mutable_logs();
  const ::top::evm_engine::basic::ResultLog& logs(int index) const;
  ::top::evm_engine::basic::ResultLog* add_logs();
  const ::google::protobuf::RepeatedPtrField< ::top::evm_engine::basic::ResultLog >&
      logs() const;

  // bytes output = 3;
  void clear_output();
  static const int kOutputFieldNumber = 3;
  const ::std::string& output() const;
  void set_output(const ::std::string& value);
  #if LANG_CXX11
  void set_output(::std::string&& value);
  #endif
  void set_output(const char* value);
  void set_output(const void* value, size_t size);
  ::std::string* mutable_output();
  ::std::string* release_output();
  void set_allocated_output(::std::string* output);

  // uint64 cost = 2;
  void clear_cost();
  static const int kCostFieldNumber = 2;
  ::google::protobuf::uint64 cost() const;
  void set_cost(::google::protobuf::uint64 value);

  // uint32 exit_status = 1;
  void clear_exit_status();
  static const int kExitStatusFieldNumber = 1;
  ::google::protobuf::uint32 exit_status() const;
  void set_exit_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:top.evm_engine.precompile.PrecompileOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::top::evm_engine::basic::ResultLog > logs_;
  ::google::protobuf::internal::ArenaStringPtr output_;
  ::google::protobuf::uint64 cost_;
  ::google::protobuf::uint32 exit_status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5fprecompile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrecompileFailure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.evm_engine.precompile.PrecompileFailure) */ {
 public:
  PrecompileFailure();
  virtual ~PrecompileFailure();

  PrecompileFailure(const PrecompileFailure& from);

  inline PrecompileFailure& operator=(const PrecompileFailure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrecompileFailure(PrecompileFailure&& from) noexcept
    : PrecompileFailure() {
    *this = ::std::move(from);
  }

  inline PrecompileFailure& operator=(PrecompileFailure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrecompileFailure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrecompileFailure* internal_default_instance() {
    return reinterpret_cast<const PrecompileFailure*>(
               &_PrecompileFailure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PrecompileFailure* other);
  friend void swap(PrecompileFailure& a, PrecompileFailure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrecompileFailure* New() const final {
    return CreateMaybeMessage<PrecompileFailure>(NULL);
  }

  PrecompileFailure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PrecompileFailure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PrecompileFailure& from);
  void MergeFrom(const PrecompileFailure& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrecompileFailure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes output = 3;
  void clear_output();
  static const int kOutputFieldNumber = 3;
  const ::std::string& output() const;
  void set_output(const ::std::string& value);
  #if LANG_CXX11
  void set_output(::std::string&& value);
  #endif
  void set_output(const char* value);
  void set_output(const void* value, size_t size);
  ::std::string* mutable_output();
  ::std::string* release_output();
  void set_allocated_output(::std::string* output);

  // uint32 fail_status = 1;
  void clear_fail_status();
  static const int kFailStatusFieldNumber = 1;
  ::google::protobuf::uint32 fail_status() const;
  void set_fail_status(::google::protobuf::uint32 value);

  // uint32 minor_status = 2;
  void clear_minor_status();
  static const int kMinorStatusFieldNumber = 2;
  ::google::protobuf::uint32 minor_status() const;
  void set_minor_status(::google::protobuf::uint32 value);

  // uint64 cost = 4;
  void clear_cost();
  static const int kCostFieldNumber = 4;
  ::google::protobuf::uint64 cost() const;
  void set_cost(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:top.evm_engine.precompile.PrecompileFailure)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr output_;
  ::google::protobuf::uint32 fail_status_;
  ::google::protobuf::uint32 minor_status_;
  ::google::protobuf::uint64 cost_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5fprecompile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContractContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.evm_engine.precompile.ContractContext) */ {
 public:
  ContractContext();
  virtual ~ContractContext();

  ContractContext(const ContractContext& from);

  inline ContractContext& operator=(const ContractContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContractContext(ContractContext&& from) noexcept
    : ContractContext() {
    *this = ::std::move(from);
  }

  inline ContractContext& operator=(ContractContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContractContext& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContractContext* internal_default_instance() {
    return reinterpret_cast<const ContractContext*>(
               &_ContractContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ContractContext* other);
  friend void swap(ContractContext& a, ContractContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContractContext* New() const final {
    return CreateMaybeMessage<ContractContext>(NULL);
  }

  ContractContext* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContractContext>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContractContext& from);
  void MergeFrom(const ContractContext& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContractContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .top.evm_engine.basic.ProtoAddress address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  private:
  const ::top::evm_engine::basic::ProtoAddress& _internal_address() const;
  public:
  const ::top::evm_engine::basic::ProtoAddress& address() const;
  ::top::evm_engine::basic::ProtoAddress* release_address();
  ::top::evm_engine::basic::ProtoAddress* mutable_address();
  void set_allocated_address(::top::evm_engine::basic::ProtoAddress* address);

  // .top.evm_engine.basic.ProtoAddress caller = 2;
  bool has_caller() const;
  void clear_caller();
  static const int kCallerFieldNumber = 2;
  private:
  const ::top::evm_engine::basic::ProtoAddress& _internal_caller() const;
  public:
  const ::top::evm_engine::basic::ProtoAddress& caller() const;
  ::top::evm_engine::basic::ProtoAddress* release_caller();
  ::top::evm_engine::basic::ProtoAddress* mutable_caller();
  void set_allocated_caller(::top::evm_engine::basic::ProtoAddress* caller);

  // .top.evm_engine.basic.WeiU256 apparent_value = 3;
  bool has_apparent_value() const;
  void clear_apparent_value();
  static const int kApparentValueFieldNumber = 3;
  private:
  const ::top::evm_engine::basic::WeiU256& _internal_apparent_value() const;
  public:
  const ::top::evm_engine::basic::WeiU256& apparent_value() const;
  ::top::evm_engine::basic::WeiU256* release_apparent_value();
  ::top::evm_engine::basic::WeiU256* mutable_apparent_value();
  void set_allocated_apparent_value(::top::evm_engine::basic::WeiU256* apparent_value);

  // @@protoc_insertion_point(class_scope:top.evm_engine.precompile.ContractContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::top::evm_engine::basic::ProtoAddress* address_;
  ::top::evm_engine::basic::ProtoAddress* caller_;
  ::top::evm_engine::basic::WeiU256* apparent_value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5fprecompile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContractBridgeArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.evm_engine.precompile.ContractBridgeArgs) */ {
 public:
  ContractBridgeArgs();
  virtual ~ContractBridgeArgs();

  ContractBridgeArgs(const ContractBridgeArgs& from);

  inline ContractBridgeArgs& operator=(const ContractBridgeArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContractBridgeArgs(ContractBridgeArgs&& from) noexcept
    : ContractBridgeArgs() {
    *this = ::std::move(from);
  }

  inline ContractBridgeArgs& operator=(ContractBridgeArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContractBridgeArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContractBridgeArgs* internal_default_instance() {
    return reinterpret_cast<const ContractBridgeArgs*>(
               &_ContractBridgeArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ContractBridgeArgs* other);
  friend void swap(ContractBridgeArgs& a, ContractBridgeArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContractBridgeArgs* New() const final {
    return CreateMaybeMessage<ContractBridgeArgs>(NULL);
  }

  ContractBridgeArgs* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContractBridgeArgs>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContractBridgeArgs& from);
  void MergeFrom(const ContractBridgeArgs& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContractBridgeArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes input = 2;
  void clear_input();
  static const int kInputFieldNumber = 2;
  const ::std::string& input() const;
  void set_input(const ::std::string& value);
  #if LANG_CXX11
  void set_input(::std::string&& value);
  #endif
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  ::std::string* mutable_input();
  ::std::string* release_input();
  void set_allocated_input(::std::string* input);

  // .top.evm_engine.basic.ProtoAddress contract_address = 1;
  bool has_contract_address() const;
  void clear_contract_address();
  static const int kContractAddressFieldNumber = 1;
  private:
  const ::top::evm_engine::basic::ProtoAddress& _internal_contract_address() const;
  public:
  const ::top::evm_engine::basic::ProtoAddress& contract_address() const;
  ::top::evm_engine::basic::ProtoAddress* release_contract_address();
  ::top::evm_engine::basic::ProtoAddress* mutable_contract_address();
  void set_allocated_contract_address(::top::evm_engine::basic::ProtoAddress* contract_address);

  // .top.evm_engine.precompile.ContractContext context = 4;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 4;
  private:
  const ::top::evm_engine::precompile::ContractContext& _internal_context() const;
  public:
  const ::top::evm_engine::precompile::ContractContext& context() const;
  ::top::evm_engine::precompile::ContractContext* release_context();
  ::top::evm_engine::precompile::ContractContext* mutable_context();
  void set_allocated_context(::top::evm_engine::precompile::ContractContext* context);

  // uint64 target_gas = 3;
  void clear_target_gas();
  static const int kTargetGasFieldNumber = 3;
  ::google::protobuf::uint64 target_gas() const;
  void set_target_gas(::google::protobuf::uint64 value);

  // bool is_static = 5;
  void clear_is_static();
  static const int kIsStaticFieldNumber = 5;
  bool is_static() const;
  void set_is_static(bool value);

  // @@protoc_insertion_point(class_scope:top.evm_engine.precompile.ContractBridgeArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr input_;
  ::top::evm_engine::basic::ProtoAddress* contract_address_;
  ::top::evm_engine::precompile::ContractContext* context_;
  ::google::protobuf::uint64 target_gas_;
  bool is_static_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5fprecompile_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PrecompileOutput

// uint32 exit_status = 1;
inline void PrecompileOutput::clear_exit_status() {
  exit_status_ = 0u;
}
inline ::google::protobuf::uint32 PrecompileOutput::exit_status() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.PrecompileOutput.exit_status)
  return exit_status_;
}
inline void PrecompileOutput::set_exit_status(::google::protobuf::uint32 value) {
  
  exit_status_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.precompile.PrecompileOutput.exit_status)
}

// uint64 cost = 2;
inline void PrecompileOutput::clear_cost() {
  cost_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PrecompileOutput::cost() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.PrecompileOutput.cost)
  return cost_;
}
inline void PrecompileOutput::set_cost(::google::protobuf::uint64 value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.precompile.PrecompileOutput.cost)
}

// bytes output = 3;
inline void PrecompileOutput::clear_output() {
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrecompileOutput::output() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.PrecompileOutput.output)
  return output_.GetNoArena();
}
inline void PrecompileOutput::set_output(const ::std::string& value) {
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.evm_engine.precompile.PrecompileOutput.output)
}
#if LANG_CXX11
inline void PrecompileOutput::set_output(::std::string&& value) {
  
  output_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.evm_engine.precompile.PrecompileOutput.output)
}
#endif
inline void PrecompileOutput::set_output(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.evm_engine.precompile.PrecompileOutput.output)
}
inline void PrecompileOutput::set_output(const void* value, size_t size) {
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.evm_engine.precompile.PrecompileOutput.output)
}
inline ::std::string* PrecompileOutput::mutable_output() {
  
  // @@protoc_insertion_point(field_mutable:top.evm_engine.precompile.PrecompileOutput.output)
  return output_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrecompileOutput::release_output() {
  // @@protoc_insertion_point(field_release:top.evm_engine.precompile.PrecompileOutput.output)
  
  return output_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrecompileOutput::set_allocated_output(::std::string* output) {
  if (output != NULL) {
    
  } else {
    
  }
  output_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output);
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.precompile.PrecompileOutput.output)
}

// repeated .top.evm_engine.basic.ResultLog logs = 4;
inline int PrecompileOutput::logs_size() const {
  return logs_.size();
}
inline ::top::evm_engine::basic::ResultLog* PrecompileOutput::mutable_logs(int index) {
  // @@protoc_insertion_point(field_mutable:top.evm_engine.precompile.PrecompileOutput.logs)
  return logs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::top::evm_engine::basic::ResultLog >*
PrecompileOutput::mutable_logs() {
  // @@protoc_insertion_point(field_mutable_list:top.evm_engine.precompile.PrecompileOutput.logs)
  return &logs_;
}
inline const ::top::evm_engine::basic::ResultLog& PrecompileOutput::logs(int index) const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.PrecompileOutput.logs)
  return logs_.Get(index);
}
inline ::top::evm_engine::basic::ResultLog* PrecompileOutput::add_logs() {
  // @@protoc_insertion_point(field_add:top.evm_engine.precompile.PrecompileOutput.logs)
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::top::evm_engine::basic::ResultLog >&
PrecompileOutput::logs() const {
  // @@protoc_insertion_point(field_list:top.evm_engine.precompile.PrecompileOutput.logs)
  return logs_;
}

// -------------------------------------------------------------------

// PrecompileFailure

// uint32 fail_status = 1;
inline void PrecompileFailure::clear_fail_status() {
  fail_status_ = 0u;
}
inline ::google::protobuf::uint32 PrecompileFailure::fail_status() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.PrecompileFailure.fail_status)
  return fail_status_;
}
inline void PrecompileFailure::set_fail_status(::google::protobuf::uint32 value) {
  
  fail_status_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.precompile.PrecompileFailure.fail_status)
}

// uint32 minor_status = 2;
inline void PrecompileFailure::clear_minor_status() {
  minor_status_ = 0u;
}
inline ::google::protobuf::uint32 PrecompileFailure::minor_status() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.PrecompileFailure.minor_status)
  return minor_status_;
}
inline void PrecompileFailure::set_minor_status(::google::protobuf::uint32 value) {
  
  minor_status_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.precompile.PrecompileFailure.minor_status)
}

// bytes output = 3;
inline void PrecompileFailure::clear_output() {
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrecompileFailure::output() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.PrecompileFailure.output)
  return output_.GetNoArena();
}
inline void PrecompileFailure::set_output(const ::std::string& value) {
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.evm_engine.precompile.PrecompileFailure.output)
}
#if LANG_CXX11
inline void PrecompileFailure::set_output(::std::string&& value) {
  
  output_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.evm_engine.precompile.PrecompileFailure.output)
}
#endif
inline void PrecompileFailure::set_output(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.evm_engine.precompile.PrecompileFailure.output)
}
inline void PrecompileFailure::set_output(const void* value, size_t size) {
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.evm_engine.precompile.PrecompileFailure.output)
}
inline ::std::string* PrecompileFailure::mutable_output() {
  
  // @@protoc_insertion_point(field_mutable:top.evm_engine.precompile.PrecompileFailure.output)
  return output_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrecompileFailure::release_output() {
  // @@protoc_insertion_point(field_release:top.evm_engine.precompile.PrecompileFailure.output)
  
  return output_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrecompileFailure::set_allocated_output(::std::string* output) {
  if (output != NULL) {
    
  } else {
    
  }
  output_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output);
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.precompile.PrecompileFailure.output)
}

// uint64 cost = 4;
inline void PrecompileFailure::clear_cost() {
  cost_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PrecompileFailure::cost() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.PrecompileFailure.cost)
  return cost_;
}
inline void PrecompileFailure::set_cost(::google::protobuf::uint64 value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.precompile.PrecompileFailure.cost)
}

// -------------------------------------------------------------------

// ContractContext

// .top.evm_engine.basic.ProtoAddress address = 1;
inline bool ContractContext::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::top::evm_engine::basic::ProtoAddress& ContractContext::_internal_address() const {
  return *address_;
}
inline const ::top::evm_engine::basic::ProtoAddress& ContractContext::address() const {
  const ::top::evm_engine::basic::ProtoAddress* p = address_;
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.ContractContext.address)
  return p != NULL ? *p : *reinterpret_cast<const ::top::evm_engine::basic::ProtoAddress*>(
      &::top::evm_engine::basic::_ProtoAddress_default_instance_);
}
inline ::top::evm_engine::basic::ProtoAddress* ContractContext::release_address() {
  // @@protoc_insertion_point(field_release:top.evm_engine.precompile.ContractContext.address)
  
  ::top::evm_engine::basic::ProtoAddress* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::top::evm_engine::basic::ProtoAddress* ContractContext::mutable_address() {
  
  if (address_ == NULL) {
    auto* p = CreateMaybeMessage<::top::evm_engine::basic::ProtoAddress>(GetArenaNoVirtual());
    address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:top.evm_engine.precompile.ContractContext.address)
  return address_;
}
inline void ContractContext::set_allocated_address(::top::evm_engine::basic::ProtoAddress* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.precompile.ContractContext.address)
}

// .top.evm_engine.basic.ProtoAddress caller = 2;
inline bool ContractContext::has_caller() const {
  return this != internal_default_instance() && caller_ != NULL;
}
inline const ::top::evm_engine::basic::ProtoAddress& ContractContext::_internal_caller() const {
  return *caller_;
}
inline const ::top::evm_engine::basic::ProtoAddress& ContractContext::caller() const {
  const ::top::evm_engine::basic::ProtoAddress* p = caller_;
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.ContractContext.caller)
  return p != NULL ? *p : *reinterpret_cast<const ::top::evm_engine::basic::ProtoAddress*>(
      &::top::evm_engine::basic::_ProtoAddress_default_instance_);
}
inline ::top::evm_engine::basic::ProtoAddress* ContractContext::release_caller() {
  // @@protoc_insertion_point(field_release:top.evm_engine.precompile.ContractContext.caller)
  
  ::top::evm_engine::basic::ProtoAddress* temp = caller_;
  caller_ = NULL;
  return temp;
}
inline ::top::evm_engine::basic::ProtoAddress* ContractContext::mutable_caller() {
  
  if (caller_ == NULL) {
    auto* p = CreateMaybeMessage<::top::evm_engine::basic::ProtoAddress>(GetArenaNoVirtual());
    caller_ = p;
  }
  // @@protoc_insertion_point(field_mutable:top.evm_engine.precompile.ContractContext.caller)
  return caller_;
}
inline void ContractContext::set_allocated_caller(::top::evm_engine::basic::ProtoAddress* caller) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(caller_);
  }
  if (caller) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      caller = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, caller, submessage_arena);
    }
    
  } else {
    
  }
  caller_ = caller;
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.precompile.ContractContext.caller)
}

// .top.evm_engine.basic.WeiU256 apparent_value = 3;
inline bool ContractContext::has_apparent_value() const {
  return this != internal_default_instance() && apparent_value_ != NULL;
}
inline const ::top::evm_engine::basic::WeiU256& ContractContext::_internal_apparent_value() const {
  return *apparent_value_;
}
inline const ::top::evm_engine::basic::WeiU256& ContractContext::apparent_value() const {
  const ::top::evm_engine::basic::WeiU256* p = apparent_value_;
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.ContractContext.apparent_value)
  return p != NULL ? *p : *reinterpret_cast<const ::top::evm_engine::basic::WeiU256*>(
      &::top::evm_engine::basic::_WeiU256_default_instance_);
}
inline ::top::evm_engine::basic::WeiU256* ContractContext::release_apparent_value() {
  // @@protoc_insertion_point(field_release:top.evm_engine.precompile.ContractContext.apparent_value)
  
  ::top::evm_engine::basic::WeiU256* temp = apparent_value_;
  apparent_value_ = NULL;
  return temp;
}
inline ::top::evm_engine::basic::WeiU256* ContractContext::mutable_apparent_value() {
  
  if (apparent_value_ == NULL) {
    auto* p = CreateMaybeMessage<::top::evm_engine::basic::WeiU256>(GetArenaNoVirtual());
    apparent_value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:top.evm_engine.precompile.ContractContext.apparent_value)
  return apparent_value_;
}
inline void ContractContext::set_allocated_apparent_value(::top::evm_engine::basic::WeiU256* apparent_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(apparent_value_);
  }
  if (apparent_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      apparent_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, apparent_value, submessage_arena);
    }
    
  } else {
    
  }
  apparent_value_ = apparent_value;
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.precompile.ContractContext.apparent_value)
}

// -------------------------------------------------------------------

// ContractBridgeArgs

// .top.evm_engine.basic.ProtoAddress contract_address = 1;
inline bool ContractBridgeArgs::has_contract_address() const {
  return this != internal_default_instance() && contract_address_ != NULL;
}
inline const ::top::evm_engine::basic::ProtoAddress& ContractBridgeArgs::_internal_contract_address() const {
  return *contract_address_;
}
inline const ::top::evm_engine::basic::ProtoAddress& ContractBridgeArgs::contract_address() const {
  const ::top::evm_engine::basic::ProtoAddress* p = contract_address_;
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.ContractBridgeArgs.contract_address)
  return p != NULL ? *p : *reinterpret_cast<const ::top::evm_engine::basic::ProtoAddress*>(
      &::top::evm_engine::basic::_ProtoAddress_default_instance_);
}
inline ::top::evm_engine::basic::ProtoAddress* ContractBridgeArgs::release_contract_address() {
  // @@protoc_insertion_point(field_release:top.evm_engine.precompile.ContractBridgeArgs.contract_address)
  
  ::top::evm_engine::basic::ProtoAddress* temp = contract_address_;
  contract_address_ = NULL;
  return temp;
}
inline ::top::evm_engine::basic::ProtoAddress* ContractBridgeArgs::mutable_contract_address() {
  
  if (contract_address_ == NULL) {
    auto* p = CreateMaybeMessage<::top::evm_engine::basic::ProtoAddress>(GetArenaNoVirtual());
    contract_address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:top.evm_engine.precompile.ContractBridgeArgs.contract_address)
  return contract_address_;
}
inline void ContractBridgeArgs::set_allocated_contract_address(::top::evm_engine::basic::ProtoAddress* contract_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(contract_address_);
  }
  if (contract_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      contract_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contract_address, submessage_arena);
    }
    
  } else {
    
  }
  contract_address_ = contract_address;
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.precompile.ContractBridgeArgs.contract_address)
}

// bytes input = 2;
inline void ContractBridgeArgs::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContractBridgeArgs::input() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.ContractBridgeArgs.input)
  return input_.GetNoArena();
}
inline void ContractBridgeArgs::set_input(const ::std::string& value) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.evm_engine.precompile.ContractBridgeArgs.input)
}
#if LANG_CXX11
inline void ContractBridgeArgs::set_input(::std::string&& value) {
  
  input_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.evm_engine.precompile.ContractBridgeArgs.input)
}
#endif
inline void ContractBridgeArgs::set_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.evm_engine.precompile.ContractBridgeArgs.input)
}
inline void ContractBridgeArgs::set_input(const void* value, size_t size) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.evm_engine.precompile.ContractBridgeArgs.input)
}
inline ::std::string* ContractBridgeArgs::mutable_input() {
  
  // @@protoc_insertion_point(field_mutable:top.evm_engine.precompile.ContractBridgeArgs.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContractBridgeArgs::release_input() {
  // @@protoc_insertion_point(field_release:top.evm_engine.precompile.ContractBridgeArgs.input)
  
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContractBridgeArgs::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    
  } else {
    
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.precompile.ContractBridgeArgs.input)
}

// uint64 target_gas = 3;
inline void ContractBridgeArgs::clear_target_gas() {
  target_gas_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ContractBridgeArgs::target_gas() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.ContractBridgeArgs.target_gas)
  return target_gas_;
}
inline void ContractBridgeArgs::set_target_gas(::google::protobuf::uint64 value) {
  
  target_gas_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.precompile.ContractBridgeArgs.target_gas)
}

// .top.evm_engine.precompile.ContractContext context = 4;
inline bool ContractBridgeArgs::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void ContractBridgeArgs::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
inline const ::top::evm_engine::precompile::ContractContext& ContractBridgeArgs::_internal_context() const {
  return *context_;
}
inline const ::top::evm_engine::precompile::ContractContext& ContractBridgeArgs::context() const {
  const ::top::evm_engine::precompile::ContractContext* p = context_;
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.ContractBridgeArgs.context)
  return p != NULL ? *p : *reinterpret_cast<const ::top::evm_engine::precompile::ContractContext*>(
      &::top::evm_engine::precompile::_ContractContext_default_instance_);
}
inline ::top::evm_engine::precompile::ContractContext* ContractBridgeArgs::release_context() {
  // @@protoc_insertion_point(field_release:top.evm_engine.precompile.ContractBridgeArgs.context)
  
  ::top::evm_engine::precompile::ContractContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::top::evm_engine::precompile::ContractContext* ContractBridgeArgs::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::top::evm_engine::precompile::ContractContext>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:top.evm_engine.precompile.ContractBridgeArgs.context)
  return context_;
}
inline void ContractBridgeArgs::set_allocated_context(::top::evm_engine::precompile::ContractContext* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete context_;
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.precompile.ContractBridgeArgs.context)
}

// bool is_static = 5;
inline void ContractBridgeArgs::clear_is_static() {
  is_static_ = false;
}
inline bool ContractBridgeArgs::is_static() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.precompile.ContractBridgeArgs.is_static)
  return is_static_;
}
inline void ContractBridgeArgs::set_is_static(bool value) {
  
  is_static_ = value;
  // @@protoc_insertion_point(field_set:top.evm_engine.precompile.ContractBridgeArgs.is_static)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace precompile
}  // namespace evm_engine
}  // namespace top

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_5fprecompile_2eproto
