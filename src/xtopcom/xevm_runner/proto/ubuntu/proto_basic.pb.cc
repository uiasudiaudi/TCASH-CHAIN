// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_basic.proto

#include "proto_basic.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_5fbasic_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoAddress_proto_5fbasic_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_5fbasic_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RawU256_proto_5fbasic_2eproto;
namespace top {
namespace evm_engine {
namespace basic {
class ProtoAddressDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoAddress> _instance;
} _ProtoAddress_default_instance_;
class RawU256DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RawU256> _instance;
} _RawU256_default_instance_;
class WeiU256DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WeiU256> _instance;
} _WeiU256_default_instance_;
class ResultLogDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultLog> _instance;
} _ResultLog_default_instance_;
}  // namespace basic
}  // namespace evm_engine
}  // namespace top
static void InitDefaultsscc_info_ProtoAddress_proto_5fbasic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::top::evm_engine::basic::_ProtoAddress_default_instance_;
    new (ptr) ::top::evm_engine::basic::ProtoAddress();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::top::evm_engine::basic::ProtoAddress::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoAddress_proto_5fbasic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoAddress_proto_5fbasic_2eproto}, {}};

static void InitDefaultsscc_info_RawU256_proto_5fbasic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::top::evm_engine::basic::_RawU256_default_instance_;
    new (ptr) ::top::evm_engine::basic::RawU256();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::top::evm_engine::basic::RawU256::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RawU256_proto_5fbasic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RawU256_proto_5fbasic_2eproto}, {}};

static void InitDefaultsscc_info_ResultLog_proto_5fbasic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::top::evm_engine::basic::_ResultLog_default_instance_;
    new (ptr) ::top::evm_engine::basic::ResultLog();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::top::evm_engine::basic::ResultLog::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ResultLog_proto_5fbasic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ResultLog_proto_5fbasic_2eproto}, {
      &scc_info_ProtoAddress_proto_5fbasic_2eproto.base,
      &scc_info_RawU256_proto_5fbasic_2eproto.base,}};

static void InitDefaultsscc_info_WeiU256_proto_5fbasic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::top::evm_engine::basic::_WeiU256_default_instance_;
    new (ptr) ::top::evm_engine::basic::WeiU256();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::top::evm_engine::basic::WeiU256::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WeiU256_proto_5fbasic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WeiU256_proto_5fbasic_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_5fbasic_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_5fbasic_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_5fbasic_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_5fbasic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::top::evm_engine::basic::ProtoAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::top::evm_engine::basic::ProtoAddress, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::top::evm_engine::basic::RawU256, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::top::evm_engine::basic::RawU256, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::top::evm_engine::basic::WeiU256, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::top::evm_engine::basic::WeiU256, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::top::evm_engine::basic::ResultLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::top::evm_engine::basic::ResultLog, address_),
  PROTOBUF_FIELD_OFFSET(::top::evm_engine::basic::ResultLog, topics_),
  PROTOBUF_FIELD_OFFSET(::top::evm_engine::basic::ResultLog, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::top::evm_engine::basic::ProtoAddress)},
  { 6, -1, sizeof(::top::evm_engine::basic::RawU256)},
  { 12, -1, sizeof(::top::evm_engine::basic::WeiU256)},
  { 18, -1, sizeof(::top::evm_engine::basic::ResultLog)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::top::evm_engine::basic::_ProtoAddress_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::top::evm_engine::basic::_RawU256_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::top::evm_engine::basic::_WeiU256_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::top::evm_engine::basic::_ResultLog_default_instance_),
};

const char descriptor_table_protodef_proto_5fbasic_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021proto_basic.proto\022\024top.evm_engine.basi"
  "c\"\035\n\014ProtoAddress\022\r\n\005value\030\001 \001(\014\"\027\n\007RawU"
  "256\022\014\n\004data\030\001 \001(\014\"\027\n\007WeiU256\022\014\n\004data\030\001 \001"
  "(\014\"}\n\tResultLog\0223\n\007address\030\001 \001(\0132\".top.e"
  "vm_engine.basic.ProtoAddress\022-\n\006topics\030\002"
  " \003(\0132\035.top.evm_engine.basic.RawU256\022\014\n\004d"
  "ata\030\003 \001(\014b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_5fbasic_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_5fbasic_2eproto_sccs[4] = {
  &scc_info_ProtoAddress_proto_5fbasic_2eproto.base,
  &scc_info_RawU256_proto_5fbasic_2eproto.base,
  &scc_info_ResultLog_proto_5fbasic_2eproto.base,
  &scc_info_WeiU256_proto_5fbasic_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_5fbasic_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_5fbasic_2eproto = {
  false, false, descriptor_table_protodef_proto_5fbasic_2eproto, "proto_basic.proto", 257,
  &descriptor_table_proto_5fbasic_2eproto_once, descriptor_table_proto_5fbasic_2eproto_sccs, descriptor_table_proto_5fbasic_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_proto_5fbasic_2eproto::offsets,
  file_level_metadata_proto_5fbasic_2eproto, 4, file_level_enum_descriptors_proto_5fbasic_2eproto, file_level_service_descriptors_proto_5fbasic_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_5fbasic_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_5fbasic_2eproto)), true);
namespace top {
namespace evm_engine {
namespace basic {

// ===================================================================

void ProtoAddress::InitAsDefaultInstance() {
}
class ProtoAddress::_Internal {
 public:
};

ProtoAddress::ProtoAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:top.evm_engine.basic.ProtoAddress)
}
ProtoAddress::ProtoAddress(const ProtoAddress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:top.evm_engine.basic.ProtoAddress)
}

void ProtoAddress::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoAddress_proto_5fbasic_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProtoAddress::~ProtoAddress() {
  // @@protoc_insertion_point(destructor:top.evm_engine.basic.ProtoAddress)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoAddress::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoAddress::ArenaDtor(void* object) {
  ProtoAddress* _this = reinterpret_cast< ProtoAddress* >(object);
  (void)_this;
}
void ProtoAddress::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoAddress& ProtoAddress::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoAddress_proto_5fbasic_2eproto.base);
  return *internal_default_instance();
}


void ProtoAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:top.evm_engine.basic.ProtoAddress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoAddress::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoAddress::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:top.evm_engine.basic.ProtoAddress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:top.evm_engine.basic.ProtoAddress)
  return target;
}

size_t ProtoAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:top.evm_engine.basic.ProtoAddress)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoAddress::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:top.evm_engine.basic.ProtoAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoAddress* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:top.evm_engine.basic.ProtoAddress)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:top.evm_engine.basic.ProtoAddress)
    MergeFrom(*source);
  }
}

void ProtoAddress::MergeFrom(const ProtoAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:top.evm_engine.basic.ProtoAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void ProtoAddress::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:top.evm_engine.basic.ProtoAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoAddress::CopyFrom(const ProtoAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:top.evm_engine.basic.ProtoAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoAddress::IsInitialized() const {
  return true;
}

void ProtoAddress::InternalSwap(ProtoAddress* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoAddress::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RawU256::InitAsDefaultInstance() {
}
class RawU256::_Internal {
 public:
};

RawU256::RawU256(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:top.evm_engine.basic.RawU256)
}
RawU256::RawU256(const RawU256& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:top.evm_engine.basic.RawU256)
}

void RawU256::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RawU256_proto_5fbasic_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RawU256::~RawU256() {
  // @@protoc_insertion_point(destructor:top.evm_engine.basic.RawU256)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RawU256::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RawU256::ArenaDtor(void* object) {
  RawU256* _this = reinterpret_cast< RawU256* >(object);
  (void)_this;
}
void RawU256::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RawU256::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RawU256& RawU256::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RawU256_proto_5fbasic_2eproto.base);
  return *internal_default_instance();
}


void RawU256::Clear() {
// @@protoc_insertion_point(message_clear_start:top.evm_engine.basic.RawU256)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RawU256::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RawU256::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:top.evm_engine.basic.RawU256)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:top.evm_engine.basic.RawU256)
  return target;
}

size_t RawU256::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:top.evm_engine.basic.RawU256)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawU256::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:top.evm_engine.basic.RawU256)
  GOOGLE_DCHECK_NE(&from, this);
  const RawU256* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RawU256>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:top.evm_engine.basic.RawU256)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:top.evm_engine.basic.RawU256)
    MergeFrom(*source);
  }
}

void RawU256::MergeFrom(const RawU256& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:top.evm_engine.basic.RawU256)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
}

void RawU256::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:top.evm_engine.basic.RawU256)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawU256::CopyFrom(const RawU256& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:top.evm_engine.basic.RawU256)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawU256::IsInitialized() const {
  return true;
}

void RawU256::InternalSwap(RawU256* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RawU256::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WeiU256::InitAsDefaultInstance() {
}
class WeiU256::_Internal {
 public:
};

WeiU256::WeiU256(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:top.evm_engine.basic.WeiU256)
}
WeiU256::WeiU256(const WeiU256& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:top.evm_engine.basic.WeiU256)
}

void WeiU256::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WeiU256_proto_5fbasic_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WeiU256::~WeiU256() {
  // @@protoc_insertion_point(destructor:top.evm_engine.basic.WeiU256)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WeiU256::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WeiU256::ArenaDtor(void* object) {
  WeiU256* _this = reinterpret_cast< WeiU256* >(object);
  (void)_this;
}
void WeiU256::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WeiU256::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WeiU256& WeiU256::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WeiU256_proto_5fbasic_2eproto.base);
  return *internal_default_instance();
}


void WeiU256::Clear() {
// @@protoc_insertion_point(message_clear_start:top.evm_engine.basic.WeiU256)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WeiU256::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WeiU256::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:top.evm_engine.basic.WeiU256)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:top.evm_engine.basic.WeiU256)
  return target;
}

size_t WeiU256::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:top.evm_engine.basic.WeiU256)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WeiU256::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:top.evm_engine.basic.WeiU256)
  GOOGLE_DCHECK_NE(&from, this);
  const WeiU256* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WeiU256>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:top.evm_engine.basic.WeiU256)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:top.evm_engine.basic.WeiU256)
    MergeFrom(*source);
  }
}

void WeiU256::MergeFrom(const WeiU256& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:top.evm_engine.basic.WeiU256)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
}

void WeiU256::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:top.evm_engine.basic.WeiU256)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WeiU256::CopyFrom(const WeiU256& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:top.evm_engine.basic.WeiU256)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WeiU256::IsInitialized() const {
  return true;
}

void WeiU256::InternalSwap(WeiU256* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WeiU256::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResultLog::InitAsDefaultInstance() {
  ::top::evm_engine::basic::_ResultLog_default_instance_._instance.get_mutable()->address_ = const_cast< ::top::evm_engine::basic::ProtoAddress*>(
      ::top::evm_engine::basic::ProtoAddress::internal_default_instance());
}
class ResultLog::_Internal {
 public:
  static const ::top::evm_engine::basic::ProtoAddress& address(const ResultLog* msg);
};

const ::top::evm_engine::basic::ProtoAddress&
ResultLog::_Internal::address(const ResultLog* msg) {
  return *msg->address_;
}
ResultLog::ResultLog(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  topics_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:top.evm_engine.basic.ResultLog)
}
ResultLog::ResultLog(const ResultLog& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      topics_(from.topics_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  if (from._internal_has_address()) {
    address_ = new ::top::evm_engine::basic::ProtoAddress(*from.address_);
  } else {
    address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:top.evm_engine.basic.ResultLog)
}

void ResultLog::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResultLog_proto_5fbasic_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_ = nullptr;
}

ResultLog::~ResultLog() {
  // @@protoc_insertion_point(destructor:top.evm_engine.basic.ResultLog)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResultLog::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
}

void ResultLog::ArenaDtor(void* object) {
  ResultLog* _this = reinterpret_cast< ResultLog* >(object);
  (void)_this;
}
void ResultLog::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResultLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultLog& ResultLog::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultLog_proto_5fbasic_2eproto.base);
  return *internal_default_instance();
}


void ResultLog::Clear() {
// @@protoc_insertion_point(message_clear_start:top.evm_engine.basic.ResultLog)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topics_.Clear();
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultLog::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .top.evm_engine.basic.ProtoAddress address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .top.evm_engine.basic.RawU256 topics = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_topics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultLog::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:top.evm_engine.basic.ResultLog)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .top.evm_engine.basic.ProtoAddress address = 1;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::address(this), target, stream);
  }

  // repeated .top.evm_engine.basic.RawU256 topics = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_topics_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_topics(i), target, stream);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:top.evm_engine.basic.ResultLog)
  return target;
}

size_t ResultLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:top.evm_engine.basic.ResultLog)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .top.evm_engine.basic.RawU256 topics = 2;
  total_size += 1UL * this->_internal_topics_size();
  for (const auto& msg : this->topics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .top.evm_engine.basic.ProtoAddress address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultLog::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:top.evm_engine.basic.ResultLog)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultLog* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultLog>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:top.evm_engine.basic.ResultLog)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:top.evm_engine.basic.ResultLog)
    MergeFrom(*source);
  }
}

void ResultLog::MergeFrom(const ResultLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:top.evm_engine.basic.ResultLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topics_.MergeFrom(from.topics_);
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::top::evm_engine::basic::ProtoAddress::MergeFrom(from._internal_address());
  }
}

void ResultLog::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:top.evm_engine.basic.ResultLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultLog::CopyFrom(const ResultLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:top.evm_engine.basic.ResultLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultLog::IsInitialized() const {
  return true;
}

void ResultLog::InternalSwap(ResultLog* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  topics_.InternalSwap(&other->topics_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(address_, other->address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultLog::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace basic
}  // namespace evm_engine
}  // namespace top
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::top::evm_engine::basic::ProtoAddress* Arena::CreateMaybeMessage< ::top::evm_engine::basic::ProtoAddress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::top::evm_engine::basic::ProtoAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::top::evm_engine::basic::RawU256* Arena::CreateMaybeMessage< ::top::evm_engine::basic::RawU256 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::top::evm_engine::basic::RawU256 >(arena);
}
template<> PROTOBUF_NOINLINE ::top::evm_engine::basic::WeiU256* Arena::CreateMaybeMessage< ::top::evm_engine::basic::WeiU256 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::top::evm_engine::basic::WeiU256 >(arena);
}
template<> PROTOBUF_NOINLINE ::top::evm_engine::basic::ResultLog* Arena::CreateMaybeMessage< ::top::evm_engine::basic::ResultLog >(Arena* arena) {
  return Arena::CreateMessageInternal< ::top::evm_engine::basic::ResultLog >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
